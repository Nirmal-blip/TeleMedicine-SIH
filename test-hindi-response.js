const axios = require('axios');

async function testHindiResponse() {
    console.log('üß™ Testing Hindi Response Formatting Fix');
    console.log('=' .repeat(50));

    const testQuestion = '‡§Æ‡•Å‡§ù‡•á ‡§¨‡•Å‡§ñ‡§æ‡§∞ ‡§π‡•à, ‡§ï‡•ç‡§Ø‡§æ ‡§ï‡§∞‡•Ç‡§Å?';
    
    try {
        console.log(`üìù Question: ${testQuestion}`);
        console.log('Sending request to Flask server...');
        
        const response = await axios.post('http://localhost:8000/api/chat', {
            input: testQuestion,
            language: 'hi',
            responseLanguage: 'hi'
        }, {
            timeout: 15000
        });

        if (response.status === 200 && response.data.response) {
            console.log('‚úÖ Response received successfully!');
            console.log('Response length:', response.data.response.length);
            console.log('\nüìã Full Response:');
            console.log(response.data.response);
            
            // Check if the response contains Hindi characters
            const hasHindi = /[\u0900-\u097F]/.test(response.data.response);
            console.log('\nüîç Analysis:');
            console.log(`- Contains Hindi script: ${hasHindi ? '‚úÖ Yes' : '‚ùå No'}`);
            console.log(`- Response structure: ${response.data.response.includes('**') ? '‚úÖ Formatted' : '‚ùå Unformatted'}`);
            console.log(`- Has medical disclaimer: ${response.data.response.includes('‡§ö‡§ø‡§ï‡§ø‡§§‡•ç‡§∏‡§æ ‡§Ö‡§∏‡•ç‡§µ‡•Ä‡§ï‡§∞‡§£') ? '‚úÖ Yes' : '‚ùå No'}`);
            
        } else {
            console.log('‚ùå No valid response received');
        }
    } catch (error) {
        if (error.response) {
            console.log(`‚ùå HTTP Error ${error.response.status}: ${error.response.data?.error || 'Unknown error'}`);
        } else if (error.request) {
            console.log('‚ùå Network Error: Flask server may not be running on port 8000');
        } else {
            console.log(`‚ùå Error: ${error.message}`);
        }
    }
}

// Run the test
testHindiResponse().catch(console.error);
